#include <iostream> // підключення бібліотеки для введення/виведення
#include "task1.h" // підключення заголовкового файлу для першого завдання
using namespace std;

// функція перевірки правильності часу
int CheckTime(TTime T) {
    // перевірка, чи значення годин, хвилин і секунд у межах допустимого діапазону
    if (T.Hour >= 0 && T.Hour < 24 &&
        T.Min >= 0 && T.Min < 60 &&
        T.Sec >= 0 && T.Sec < 60)
    {
        return 1; // якщо всі значення коректні, повернення 1
    }
    return 0; // якщо ні, повернення 0
}

// функція віднімання годин
TTime SubHour(TTime T, int N) {
    T.Hour -= N; // віднімання заданої кількості годин
    while (T.Hour < 0) { // поки значення більше нуля
        // якщо результат менше 0 — додавання 24, щоб перейти в попередній день
        T.Hour += 24;
    }

    return T; // повернення нового моменту часу
}

// функція виводу часу
void PrintTime(TTime T) {
    // Виведення часу з доданими нулями, якщо потрібно
    cout << (T.Hour < 10 ? "0" : "") << T.Hour << ":"
        << (T.Min < 10 ? "0" : "") << T.Min << ":"
        << (T.Sec < 10 ? "0" : "") << T.Sec << endl;
}

bool InputInt(const string& prompt, int& result) { // функція введення цілого числа
    cout << prompt;
    cin >> result;
    // перевірка на помилку вводу (неціле число)
    if (cin.fail()) { 
        cin.clear(); // скидання стану помилки
        cin.ignore(1000, '\n'); // очищення буфера вводу
        cout << "Помилка: введено не ціле число." << endl; // виведення сповіщення про помилку
        return false;
    }
    return true;
}

TTime InputTime(int index) { // функція для введення одного моменту часу
    TTime t;
    cout << "Введення моменту часу #" << index + 1 << ":\n"; // введення часу

    while (!InputInt("  Години: ", t.Hour)); // поки
    while (!InputInt("  Хвилини: ", t.Min)); // вводиться
    while (!InputInt("  Секунди: ", t.Sec)); // час

    return t; // виводяться ці числа
}

void RunTimeTask() { // головна функція виконання завдання з обробки часу
    const int SIZE = 5; // кількість моментів часу
    TTime times[SIZE]; // масив з 5 моментів часу
    int choice;

    cout << "Виберіть спосіб введення часу:\n"; // запит користувача, як він хоче вводити час
    cout << "1 - Ввести час вручну\n"; 
    cout << "2 - Використати вбудовані значення\n";
    cout << "Ваш вибір: ";
    cin >> choice;

    if (choice == 1) {  // введення часу вручну
        for (int i = 0; i < SIZE; i++) {
            times[i] = InputTime(i); // введення кожного моменту часу
        }
    }
    else {
        // Вбудовані значення
        times[0] = { 14, 30, 45 };
        times[1] = { 3, 5, 15 };
        times[2] = { 23, 59, 59 };
        times[3] = { 0, 0, 0 };
        times[4] = { 25, 10, 5 };  // неправильний
    }

    int N;
    cout << "Введіть кількість годин для віднімання: "; // введення кількості годин для віднімання
    cin >> N;

    for (int i = 0; i < SIZE; i++) {  // опрацювання кожного моменту часу
        cout << "\nПочатковий час: \t\t"; // введення початкового часу
        PrintTime(times[i]); // виведення початкового часу

        bool check = true; // перевірка, чи час коректний
        if (!CheckTime(times[i])) { // якщо ні
            cout << "Неправильний час.\nПовертається без змін: \t\t", PrintTime(times[i]); // виведення відповідного повідомлення
            check = false;
        }

        TTime newTime = SubHour(times[i], N); // обчислення нового часу (із відніманням годин)

        if (check) { // якщо коректний 
        cout << "Після зменшення на " << N << " годин: \t", PrintTime(newTime); // виведення зміненого результат
        }
    }
}
